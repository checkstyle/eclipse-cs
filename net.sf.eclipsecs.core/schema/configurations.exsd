<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="net.sf.eclipsecs.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="net.sf.eclipsecs.core" id="configurations" name="Checkstyle configurations"/>
      </appinfo>
      <documentation>
         This extension point can be used to provide specific filter sets.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="check-configuration" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  The extension point id this contribution shall apply to.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique id for the extension.
The id is used to identify the specific filter set.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  The human readable name of this extension.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="check-configuration">
      <annotation>
         <documentation>
            Element to define a built-in check configuration.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="property"/>
         </sequence>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The unique name of this check configuration.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="description" type="string" use="required">
            <annotation>
               <documentation>
                  A description of the check configuration.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="location" type="string" use="required">
            <annotation>
               <documentation>
                  The path to the checkstyle configuration file inside the plugin.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="default-weight" type="string">
            <annotation>
               <documentation>
                  Defines the &quot;weight&quot; of a builtin configuration upon determining the default check configuration to use, if no other workspace default has been set and no project configuration exists. The built-in check configuration with the highest weight will be selected as out-of-the-box default. This allows for extension providers to define own builtin configurations with their plugin extension, which will become automatically used as default.
The all-time default configuration &quot;Sun Checks&quot; is defined with default-weight=&quot;1&quot;, so in order to have a extension builtin config chosen as default, make sure its default-weight value is higher than that. If default-weight is not defined a value of 0 (zero) is assumed.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="property">
      <annotation>
         <documentation>
            Defines a resolvable property for the builtin-configuration. This is useful for having multiple builtin configurations share a common checkstyle configuration file - with the exception of them having a few parametrizable differences (e.g. max line length 80 vs. 100).
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The property name.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  The property value.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         4.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The following is an example of using the &lt;samp&gt;configurations&lt;/samp&gt; extension point.

&lt;pre&gt;
&lt;extension
    id=&quot;checkstyle.CheckConfiguration&quot;
    point=&quot;net.sf.eclipsecs.core.configurations&quot;&gt;
    &lt;check-configuration
        name=&quot;Sample Builtin Checks&quot;
        location=&quot;sample_checks.xml&quot;
        description=&quot;Sample Built-in configuration&quot;&gt;
        &lt;property name=&quot;maxLineLength&quot; value=&quot;50&quot;/&gt;
     &lt;/check-configuration&gt;
&lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>




</schema>
